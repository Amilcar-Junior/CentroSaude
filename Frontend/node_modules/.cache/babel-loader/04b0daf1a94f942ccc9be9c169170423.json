{"ast":null,"code":"import { CREATE_TESTE, RETRIEVE_TESTES, UPDATE_TESTE, DELETE_TESTE } from \"./actionTypes\";\nimport { toast } from \"react-toastify\";\nimport TestesService from \"./testesService\";\nexport const createTeste = (Nome, email, tel) => async dispatch => {\n  try {\n    const res = await TestesService.create({\n      Nome,\n      email,\n      tel\n    });\n    dispatch({\n      type: CREATE_TESTE,\n      payload: res.data\n    });\n    toast.success('Teste adicionado com sucesso!');\n    return Promise.resolve(res.data);\n  } catch (err) {\n    toast.error('Teste não adicionado!');\n    return Promise.reject(err);\n  }\n};\nexport const retrieveTestes = () => async dispatch => {\n  try {\n    const res = await TestesService.getAll();\n    dispatch({\n      type: RETRIEVE_TESTES,\n      payload: res.data\n    });\n  } catch (err) {\n    toast.error('Teste não encontrado!');\n    console.log(err);\n  }\n};\nexport const updateTeste = (id, data) => async dispatch => {\n  try {\n    const res = await TestesService.update(id, data);\n    dispatch({\n      type: UPDATE_TESTE,\n      payload: data\n    });\n    toast.success('Teste foi alterado com sucesso!');\n    return Promise.resolve(res.data);\n  } catch (err) {\n    toast.error('Teste não foi alterado!');\n    return Promise.reject(err);\n  }\n};\nexport const deleteTeste = id => async dispatch => {\n  try {\n    await TestesService.delete(id);\n    dispatch({\n      type: DELETE_TESTE,\n      payload: {\n        id\n      }\n    });\n    toast.success('Teste Deletado com sucesso!');\n  } catch (err) {\n    toast.error('Teste não foi Deletado!');\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/CentroSaude/Frontend/src/conection/testes/actions.js"],"names":["CREATE_TESTE","RETRIEVE_TESTES","UPDATE_TESTE","DELETE_TESTE","toast","TestesService","createTeste","Nome","email","tel","dispatch","res","create","type","payload","data","success","Promise","resolve","err","error","reject","retrieveTestes","getAll","console","log","updateTeste","id","update","deleteTeste","delete"],"mappings":"AAAA,SAEIA,YAFJ,EAIIC,eAJJ,EAMIC,YANJ,EAQIC,YARJ,QAUO,eAVP;AAYA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,MAAMC,WAAW,GAEpB,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,KAAsB,MAAOC,QAAP,IAAoB;AAEtC,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMN,aAAa,CAACO,MAAd,CAAqB;AAEnCL,MAAAA,IAFmC;AAGnCC,MAAAA,KAHmC;AAInCC,MAAAA;AAJmC,KAArB,CAAlB;AAQAC,IAAAA,QAAQ,CAAC;AAELG,MAAAA,IAAI,EAAEb,YAFD;AAILc,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAJR,KAAD,CAAR;AAQAX,IAAAA,KAAK,CAACY,OAAN,CAAc,+BAAd;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgBP,GAAG,CAACI,IAApB,CAAP;AAEH,GArBD,CAqBE,OAAOI,GAAP,EAAY;AAEVf,IAAAA,KAAK,CAACgB,KAAN,CAAY,uBAAZ;AACA,WAAOH,OAAO,CAACI,MAAR,CAAeF,GAAf,CAAP;AAEH;AAEJ,CAhCE;AAkCP,OAAO,MAAMG,cAAc,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AAEpD,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMN,aAAa,CAACkB,MAAd,EAAlB;AAEAb,IAAAA,QAAQ,CAAC;AAELG,MAAAA,IAAI,EAAEZ,eAFD;AAILa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAJR,KAAD,CAAR;AAQH,GAZD,CAYE,OAAOI,GAAP,EAAY;AAEVf,IAAAA,KAAK,CAACgB,KAAN,CAAY,uBAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AAEH;AAEJ,CArBM;AAuBP,OAAO,MAAMO,WAAW,GAAG,CAACC,EAAD,EAAKZ,IAAL,KAAc,MAAOL,QAAP,IAAoB;AAEzD,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMN,aAAa,CAACuB,MAAd,CAAqBD,EAArB,EAAyBZ,IAAzB,CAAlB;AAEAL,IAAAA,QAAQ,CAAC;AAELG,MAAAA,IAAI,EAAEX,YAFD;AAILY,MAAAA,OAAO,EAAEC;AAJJ,KAAD,CAAR;AAQAX,IAAAA,KAAK,CAACY,OAAN,CAAc,iCAAd;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgBP,GAAG,CAACI,IAApB,CAAP;AAEH,GAfD,CAeE,OAAOI,GAAP,EAAY;AACVf,IAAAA,KAAK,CAACgB,KAAN,CAAY,yBAAZ;AACA,WAAOH,OAAO,CAACI,MAAR,CAAeF,GAAf,CAAP;AAEH;AAEJ,CAvBM;AAyBP,OAAO,MAAMU,WAAW,GAAIF,EAAD,IAAQ,MAAOjB,QAAP,IAAoB;AAEnD,MAAI;AAEA,UAAML,aAAa,CAACyB,MAAd,CAAqBH,EAArB,CAAN;AAEAjB,IAAAA,QAAQ,CAAC;AAELG,MAAAA,IAAI,EAAEV,YAFD;AAILW,MAAAA,OAAO,EAAE;AAAEa,QAAAA;AAAF;AAJJ,KAAD,CAAR;AAQAvB,IAAAA,KAAK,CAACY,OAAN,CAAc,6BAAd;AAEH,GAdD,CAcE,OAAOG,GAAP,EAAY;AAEVf,IAAAA,KAAK,CAACgB,KAAN,CAAY,yBAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AAEH;AAEJ,CAvBM","sourcesContent":["import {\r\n\r\n    CREATE_TESTE,\r\n\r\n    RETRIEVE_TESTES,\r\n\r\n    UPDATE_TESTE,\r\n\r\n    DELETE_TESTE,\r\n\r\n} from \"./actionTypes\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport TestesService from \"./testesService\";\r\n\r\nexport const createTeste =\r\n\r\n    (Nome, email, tel) => async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const res = await TestesService.create({\r\n\r\n                Nome,\r\n                email,\r\n                tel,\r\n\r\n            });\r\n\r\n            dispatch({\r\n\r\n                type: CREATE_TESTE,\r\n\r\n                payload: res.data,\r\n\r\n            });\r\n\r\n            toast.success('Teste adicionado com sucesso!');\r\n            return Promise.resolve(res.data);\r\n\r\n        } catch (err) {\r\n\r\n            toast.error('Teste não adicionado!')\r\n            return Promise.reject(err);\r\n\r\n        }\r\n\r\n    };\r\n\r\nexport const retrieveTestes = () => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        const res = await TestesService.getAll();\r\n\r\n        dispatch({\r\n\r\n            type: RETRIEVE_TESTES,\r\n\r\n            payload: res.data,\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        toast.error('Teste não encontrado!');\r\n        console.log(err);\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const updateTeste = (id, data) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        const res = await TestesService.update(id, data);\r\n\r\n        dispatch({\r\n\r\n            type: UPDATE_TESTE,\r\n\r\n            payload: data,\r\n\r\n        });\r\n\r\n        toast.success('Teste foi alterado com sucesso!')\r\n        return Promise.resolve(res.data);\r\n\r\n    } catch (err) {\r\n        toast.error('Teste não foi alterado!')\r\n        return Promise.reject(err);\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const deleteTeste = (id) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        await TestesService.delete(id);\r\n\r\n        dispatch({\r\n\r\n            type: DELETE_TESTE,\r\n\r\n            payload: { id },\r\n\r\n        });\r\n\r\n        toast.success('Teste Deletado com sucesso!')\r\n\r\n    } catch (err) {\r\n\r\n        toast.error('Teste não foi Deletado!')\r\n        console.log(err);\r\n\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}