{"ast":null,"code":"import { CREATE_TESTE, RETRIEVE_TESTES, UPDATE_TESTE, DELETE_TESTE } from \"./actionTypes\";\nconst initialState = [];\n\nfunction testeReducer(testes = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CREATE_TESTE:\n      return [...testes, payload];\n\n    case RETRIEVE_TESTES:\n      return payload;\n\n    case UPDATE_TESTE:\n      return testes.map(teste => {\n        if (teste.id === payload.id) {\n          return { ...teste,\n            ...payload\n          };\n        } else {\n          return teste;\n        }\n      });\n\n    case DELETE_TESTE:\n      return testes.filter(({\n        id\n      }) => id !== payload.id);\n\n    default:\n      return testes;\n  }\n}\n\nexport default testeReducer;","map":{"version":3,"sources":["C:/Users/kevin/Documents/GitHub/CentroSaude/Frontend/src/conection/testes/reducers.js"],"names":["CREATE_TESTE","RETRIEVE_TESTES","UPDATE_TESTE","DELETE_TESTE","initialState","testeReducer","testes","action","type","payload","map","teste","id","filter"],"mappings":"AAAA,SAEIA,YAFJ,EAIIC,eAJJ,EAMIC,YANJ,EAQIC,YARJ,QAUU,eAVV;AAYG,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,YAAT,CAAsBC,MAAM,GAAGF,YAA/B,EAA6CG,MAA7C,EAAqD;AAEpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AAEE,SAAKR,YAAL;AAEE,aAAO,CAAC,GAAGM,MAAJ,EAAYG,OAAZ,CAAP;;AAEF,SAAKR,eAAL;AAEE,aAAOQ,OAAP;;AAEF,SAAKP,YAAL;AAEE,aAAOI,MAAM,CAACI,GAAP,CAAYC,KAAD,IAAW;AAE3B,YAAIA,KAAK,CAACC,EAAN,KAAaH,OAAO,CAACG,EAAzB,EAA6B;AAE3B,iBAAO,EAEL,GAAGD,KAFE;AAIL,eAAGF;AAJE,WAAP;AAQD,SAVD,MAUO;AAEL,iBAAOE,KAAP;AAED;AAEF,OAlBM,CAAP;;AAoBF,SAAKR,YAAL;AAEE,aAAOG,MAAM,CAACO,MAAP,CAAc,CAAC;AAAED,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKH,OAAO,CAACG,EAAzC,CAAP;;AAEF;AAEE,aAAON,MAAP;AAtCJ;AA0CA;;AAED,eAAeD,YAAf","sourcesContent":["import {\r\n\r\n    CREATE_TESTE,\r\n   \r\n    RETRIEVE_TESTES,\r\n   \r\n    UPDATE_TESTE,\r\n   \r\n    DELETE_TESTE,\r\n   \r\n   } from \"./actionTypes\";\r\n   \r\n   const initialState = [];\r\n   \r\n   function testeReducer(testes = initialState, action) {\r\n   \r\n    const { type, payload } = action;\r\n   \r\n    switch (type) {\r\n   \r\n      case CREATE_TESTE:\r\n   \r\n        return [...testes, payload];\r\n   \r\n      case RETRIEVE_TESTES:\r\n   \r\n        return payload;\r\n   \r\n      case UPDATE_TESTE:\r\n   \r\n        return testes.map((teste) => {\r\n   \r\n          if (teste.id === payload.id) {\r\n   \r\n            return {\r\n   \r\n              ...teste,\r\n   \r\n              ...payload,\r\n   \r\n            };\r\n   \r\n          } else {\r\n   \r\n            return teste;\r\n   \r\n          }\r\n   \r\n        });\r\n   \r\n      case DELETE_TESTE:\r\n   \r\n        return testes.filter(({ id }) => id !== payload.id);\r\n   \r\n      default:\r\n   \r\n        return testes;\r\n   \r\n    }\r\n   \r\n   }\r\n   \r\n   export default testeReducer;"]},"metadata":{},"sourceType":"module"}