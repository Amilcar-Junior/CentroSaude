{"ast":null,"code":"import { CREATE_AMILCAR, RETRIEVE_AMILCARS, UPDATE_AMILCAR, DELETE_AMILCAR } from \"./actionTypes\";\nimport AmilcarsService from \"./amilcarsService\";\nexport const createAmilcar = (nome, email, data) => async dispatch => {\n  try {\n    const res = await AmilcarsService.create({\n      nome,\n      email,\n      data\n    });\n    dispatch({\n      type: CREATE_AMILCAR,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const retrieveAmilcars = () => async dispatch => {\n  try {\n    const res = await AmilcarsService.getAll();\n    dispatch({\n      type: RETRIEVE_AMILCARS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateAmilcar = (id, data) => async dispatch => {\n  try {\n    const res = await AmilcarsService.update(id, data);\n    dispatch({\n      type: UPDATE_AMILCAR,\n      payload: data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const deleteAmilcar = id => async dispatch => {\n  try {\n    await AmilcarsService.delete(id);\n    dispatch({\n      type: DELETE_AMILCAR,\n      payload: {\n        id\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/CentroSaude/Frontend/src/conection/amilcars/actions.js"],"names":["CREATE_AMILCAR","RETRIEVE_AMILCARS","UPDATE_AMILCAR","DELETE_AMILCAR","AmilcarsService","createAmilcar","nome","email","data","dispatch","res","create","type","payload","Promise","resolve","err","reject","retrieveAmilcars","getAll","console","log","updateAmilcar","id","update","deleteAmilcar","delete"],"mappings":"AAAA,SAEIA,cAFJ,EAIIC,iBAJJ,EAMIC,cANJ,EAQIC,cARJ,QAUU,eAVV;AAYG,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,MAAMC,aAAa,GAEzB,CAACC,IAAD,EAAOC,KAAP,EAAcC,IAAd,KAAwB,MAAOC,QAAP,IAAoB;AAE1C,MAAI;AAEF,UAAMC,GAAG,GAAG,MAAMN,eAAe,CAACO,MAAhB,CAAuB;AAErCL,MAAAA,IAFqC;AAE/BC,MAAAA,KAF+B;AAExBC,MAAAA;AAFwB,KAAvB,CAAlB;AAMAC,IAAAA,QAAQ,CAAC;AAEPG,MAAAA,IAAI,EAAEZ,cAFC;AAIPa,MAAAA,OAAO,EAAEH,GAAG,CAACF;AAJN,KAAD,CAAR;AAQA,WAAOM,OAAO,CAACC,OAAR,CAAgBL,GAAG,CAACF,IAApB,CAAP;AAED,GAlBD,CAkBE,OAAOQ,GAAP,EAAY;AAGZ,WAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP;AAED;AAEF,CA7BK;AA+BP,OAAO,MAAME,gBAAgB,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAEzD,MAAI;AAEF,UAAMC,GAAG,GAAG,MAAMN,eAAe,CAACe,MAAhB,EAAlB;AAEAV,IAAAA,QAAQ,CAAC;AAEPG,MAAAA,IAAI,EAAEX,iBAFC;AAIPY,MAAAA,OAAO,EAAEH,GAAG,CAACF;AAJN,KAAD,CAAR;AAQD,GAZD,CAYE,OAAOQ,GAAP,EAAY;AAEZI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAED;AAED,CApBM;AAsBP,OAAO,MAAMM,aAAa,GAAG,CAACC,EAAD,EAAKf,IAAL,KAAc,MAAOC,QAAP,IAAoB;AAE9D,MAAI;AAEF,UAAMC,GAAG,GAAG,MAAMN,eAAe,CAACoB,MAAhB,CAAuBD,EAAvB,EAA2Bf,IAA3B,CAAlB;AAEAC,IAAAA,QAAQ,CAAC;AAEPG,MAAAA,IAAI,EAAEV,cAFC;AAIPW,MAAAA,OAAO,EAAEL;AAJF,KAAD,CAAR;AAQA,WAAOM,OAAO,CAACC,OAAR,CAAgBL,GAAG,CAACF,IAApB,CAAP;AAED,GAdD,CAcE,OAAOQ,GAAP,EAAY;AAEZ,WAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP;AAED;AAED,CAtBM;AAwBP,OAAO,MAAMS,aAAa,GAAIF,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AAExD,MAAI;AAEF,UAAML,eAAe,CAACsB,MAAhB,CAAuBH,EAAvB,CAAN;AAEAd,IAAAA,QAAQ,CAAC;AAEPG,MAAAA,IAAI,EAAET,cAFC;AAIPU,MAAAA,OAAO,EAAE;AAAEU,QAAAA;AAAF;AAJF,KAAD,CAAR;AAQD,GAZD,CAYE,OAAOP,GAAP,EAAY;AAEZI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAED;AAED,CApBM","sourcesContent":["import {\r\n\r\n    CREATE_AMILCAR,\r\n   \r\n    RETRIEVE_AMILCARS,\r\n   \r\n    UPDATE_AMILCAR,\r\n   \r\n    DELETE_AMILCAR,\r\n   \r\n   } from \"./actionTypes\";\r\n   \r\n   import AmilcarsService from \"./amilcarsService\";\r\n   \r\n   export const createAmilcar =\r\n   \r\n    (nome, email, data,) => async (dispatch) => {\r\n   \r\n      try {\r\n   \r\n        const res = await AmilcarsService.create({\r\n   \r\n            nome, email, data,\r\n   \r\n        });\r\n   \r\n        dispatch({\r\n   \r\n          type: CREATE_AMILCAR,\r\n   \r\n          payload: res.data,\r\n   \r\n        });\r\n   \r\n        return Promise.resolve(res.data);\r\n   \r\n      } catch (err) {\r\n   \r\n        \r\n        return Promise.reject(err);\r\n   \r\n      }\r\n   \r\n    };\r\n   \r\n   export const retrieveAmilcars = () => async (dispatch) => {\r\n   \r\n    try {\r\n   \r\n      const res = await AmilcarsService.getAll();\r\n   \r\n      dispatch({\r\n   \r\n        type: RETRIEVE_AMILCARS,\r\n   \r\n        payload: res.data,\r\n   \r\n      });\r\n   \r\n    } catch (err) {\r\n   \r\n      console.log(err);\r\n   \r\n    }\r\n   \r\n   };\r\n   \r\n   export const updateAmilcar = (id, data) => async (dispatch) => {\r\n   \r\n    try {\r\n   \r\n      const res = await AmilcarsService.update(id, data);\r\n   \r\n      dispatch({\r\n   \r\n        type: UPDATE_AMILCAR,\r\n   \r\n        payload: data,\r\n   \r\n      });\r\n   \r\n      return Promise.resolve(res.data);\r\n   \r\n    } catch (err) {\r\n   \r\n      return Promise.reject(err);\r\n   \r\n    }\r\n   \r\n   };\r\n   \r\n   export const deleteAmilcar = (id) => async (dispatch) => {\r\n   \r\n    try {\r\n   \r\n      await AmilcarsService.delete(id);\r\n   \r\n      dispatch({\r\n   \r\n        type: DELETE_AMILCAR,\r\n   \r\n        payload: { id },\r\n   \r\n      });\r\n   \r\n    } catch (err) {\r\n   \r\n      console.log(err);\r\n   \r\n    }\r\n   \r\n   };"]},"metadata":{},"sourceType":"module"}